"""fresh start

Revision ID: 5abff25e0f87
Revises: 
Create Date: 2023-04-23 15:25:52.136571

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "5abff25e0f87"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "agents",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "name"),
    )
    op.create_index(op.f("ix_agents_name"), "agents", ["name"], unique=True)
    op.create_index(op.f("ix_agents_user_id"), "agents", ["user_id"], unique=False)
    op.create_table(
        "games",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_games_name"), "games", ["name"], unique=True)
    op.create_table(
        "matches",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("game_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("new", "in_progress", "finished", name="match_status"),
            nullable=True,
        ),
        sa.Column("turn", sa.Integer(), nullable=False),
        sa.Column("next_player", sa.Integer(), nullable=True),
        sa.Column("winner", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("finished_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "match_players",
        sa.Column("match_id", sa.BigInteger(), nullable=False),
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=True),
        sa.Column("agent_id", sa.BigInteger(), nullable=True),
        sa.CheckConstraint(
            "(user_id IS NOT NULL and agent_id IS NULL) OR (user_id IS NULL and agent_id IS NOT NULL)"
        ),
        sa.CheckConstraint("number > 0"),
        sa.ForeignKeyConstraint(
            ["match_id"],
            ["matches.id"],
        ),
        sa.PrimaryKeyConstraint("match_id", "number"),
    )
    op.create_table(
        "match_turns",
        sa.Column("match_id", sa.BigInteger(), nullable=False),
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("player", sa.Integer(), nullable=True),
        sa.Column("action", sa.JSON(), nullable=True),
        sa.Column("state", sa.JSON(), nullable=False),
        sa.Column("next_player", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["match_id"],
            ["matches.id"],
        ),
        sa.PrimaryKeyConstraint("match_id", "number"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("match_turns")
    op.drop_table("match_players")
    op.drop_table("matches")
    op.drop_index(op.f("ix_games_name"), table_name="games")
    op.drop_table("games")
    op.drop_index(op.f("ix_agents_user_id"), table_name="agents")
    op.drop_index(op.f("ix_agents_name"), table_name="agents")
    op.drop_table("agents")
    # ### end Alembic commands ###
